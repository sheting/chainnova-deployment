apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-configmap-conf
  namespace: elk
data:
  logstash.conf: |-
    input {
      heartbeat {
        interval => 5
        message  => "logtype=\"access\"||Hello from Logstash "
      }
      beats {
        port => 5044
      }
    }

    filter {
      if [role] == "fe" and [logtype] == "access" {
        grok {
          patterns_dir => ["/usr/share/logstash/vendor/bundle/jruby/2.5.0/gems/logstash-patterns-core-4.1.2/patterns"]
          match => ["message" , "%{TIMESTAMP_ISO8601:logdatetime} %{LOGLEVEL:level}"]
        }
      }
      if [role] == "fe" and [logtype] == "error" {
        grok {
          patterns_dir => ["/usr/share/logstash/vendor/bundle/jruby/2.5.0/gems/logstash-patterns-core-4.1.2/patterns"]
          match => ["message" , "%{TIMESTAMP_ISO8601:logdatetime} %{LOGLEVEL:level}"]
        }
      }
      if [name] == "dimpleblog" {
        mutate {
          remove_field => [ "[host]" ]
        }
        mutate {
          add_field => {
          "host" => "%{[agent][hostname]}"
          "log.file.path" => "%{[log][file][path]}"
          }
        }
        ruby{

        code => "

          logfilepath=event.get('log.file.path')
  
          if logfilepath.nil?
  
            event.set('test', '/var/log/containers/unknowndeployment-pending-pending_unknownamespace_unknowndeployment-pending.log')
  
          else
  
            event.set('test', logfilepath)
  
          end
  
          array=event.get('test').split('/')[4].split('_')
          
          event.set('podName', array[0])
          
          event.set('namespace', array[1])
          
          index=array[2].rindex('-')
  
          event.set('containerID', array[2][index+1, index+13])
          
          event.set('deployment', array[2][0, index])
          
        "
        
        }
        grok {
          patterns_dir => ["/usr/share/logstash/vendor/bundle/jruby/2.3.0/gems/logstash-patterns-core-4.1.2/patterns"]
          match => ["message" , "%{TIMESTAMP_ISO8601:logdatetime} %{LOGLEVEL:level} \[%{DATA:thread}\] %{JAVACLASS:class} \[%{JAVAFILE:file}(?::%{NUMBER:line})?\] - %{GREEDYDATA:message}"]
        }
      }
      else {
        grok {
          patterns_dir => ["/usr/share/logstash/vendor/bundle/jruby/2.3.0/gems/logstash-patterns-core-4.1.2/patterns"]
          match => ["message" , "%{TIMESTAMP_ISO8601:logdatetime} %{LOGLEVEL:level} \[%{DATA:thread}\] %{JAVACLASS:class} \[%{JAVAFILE:file}(?::%{NUMBER:line})?\] - %{GREEDYDATA:message}"]
        }
        mutate {
          add_field => {
            "deployment" => "heartbeat"
            "project" => "test"
            "env" => "testk8s"
          }
        }
      }
    }
    
    output {
      elasticsearch {
        hosts    => [ "elasticsearch-0.es" ]
        user     => "elastic"
        password => ""
        index    => "%{deployment}-logstash-%{+YYYY-MM-dd}"
      }
    }